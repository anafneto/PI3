@baseUrl = http://localhost:3000/api
@candidatoMecanografico = 12345

### 0. Get all existing competencies (to know which ones to use)
GET {{baseUrl}}/competencias

### 1. Create a proposal with competencies to trigger notifications
POST {{baseUrl}}/propostas
Content-Type: application/json

{
  "ID_DEPARTAMENTO": 2,
  "ID_TIPO_PROPOSTA": 1,
  "ID_EMPRESA": 1,
  "NOME_PROPOSTA": "Desenvolvedor Full Stack com especialização em React e Node.js",
  "DESCRICAO_PROPOSTA": "Procuramos um desenvolvedor Full Stack para trabalhar em projetos inovadores. O candidato ideal deve ter experiência com React, Node.js, e bases de dados SQL.",
  "competencias": [
    { "ID_COMPETENCIA": 2 },
    { "ID_COMPETENCIA": 3 },
    { "ID_COMPETENCIA": 4 },
    { "ID_COMPETENCIA": 5 }
  ]
}

### 2. Create a new candidate with competencies to test matching
POST {{baseUrl}}/candidatos
Content-Type: application/json

{
  "NR_MECANOGRAFICO": 99999,
  "NOME_CANDIDATO": "Ana Silva",
  "EMAIL_CANDIDATO": "ana.silva@example.com",
  "DIPLOMADO": true,
  "PASSWORD_CANDIDATO": "password123",
  "competencias": [
    { "ID_COMPETENCIA": 2 },
    { "ID_COMPETENCIA": 3 },
    { "ID_COMPETENCIA": 4 },
    { "ID_COMPETENCIA": 5 }
  ]
}

### 3. Test notification matching logic directly (for the first proposal)
POST {{baseUrl}}/notificacoes-personalizadas/test-matching
Content-Type: application/json

{
  "propostaId": 2
}

### 4. Get all notifications for the candidate
GET {{baseUrl}}/notificacoes-personalizadas/candidato/{{candidatoMecanografico}}

### 5. Check unread notifications count
GET {{baseUrl}}/notificacoes-personalizadas/candidato/{{candidatoMecanografico}}/unread/count

### 6. Mark a specific notification as read
# Get the notification ID from the response to request #4
PUT {{baseUrl}}/notificacoes-personalizadas/candidato/{{candidatoMecanografico}}/read/1

### 7. Create another proposal that should match the candidate (80% match)
POST {{baseUrl}}/propostas
Content-Type: application/json

{
  "ID_DEPARTAMENTO": 2,
  "ID_TIPO_PROPOSTA": 2,
  "ID_EMPRESA": 1,
  "NOME_PROPOSTA": "Especialista em Frontend React",
  "DESCRICAO_PROPOSTA": "Estamos à procura de um especialista em React para desenvolver interfaces de utilizador inovadoras e responsivas.",
  "competencias": [
    { "ID_COMPETENCIA": 2 },
    { "ID_COMPETENCIA": 3 },
    { "ID_COMPETENCIA": 5 }
  ]
}

### 8. Test notification matching logic for second proposal
POST {{baseUrl}}/notificacoes-personalizadas/test-matching
Content-Type: application/json

{
  "propostaId": 2
}

### 9. Get recent notifications for the candidate (last 5)
GET {{baseUrl}}/notificacoes-personalizadas/candidato/{{candidatoMecanografico}}?limit=5

### 10. Create a proposal with different competencies (shouldn't match)
POST {{baseUrl}}/propostas
Content-Type: application/json

{
  "ID_DEPARTAMENTO": 2,
  "ID_TIPO_PROPOSTA": 3,
  "ID_EMPRESA": 1,
  "NOME_PROPOSTA": "Desenvolvedor Backend Java",
  "DESCRICAO_PROPOSTA": "Procuramos um desenvolvedor backend com experiência em Java, Spring Boot e bases de dados.",
  "competencias": [
    { "ID_COMPETENCIA": 6 },
    { "ID_COMPETENCIA": 7 },
    { "ID_COMPETENCIA": 8 }
  ]
}

### 11. Test notification matching logic for third proposal (should not create notifications)
POST {{baseUrl}}/notificacoes-personalizadas/test-matching
Content-Type: application/json

{
  "propostaId": 3
}

### 12. Create a second candidate with different competencies
POST {{baseUrl}}/candidatos
Content-Type: application/json

{
  "NR_MECANOGRAFICO": 54322,
  "NOME_CANDIDATO": "João Santos",
  "EMAIL_CANDIDATO": "joao.santos@example.com",
  "DIPLOMADO": true,
  "PASSWORD_CANDIDATO": "password123",
  "competencias": [
    { "ID_COMPETENCIA": 6 },
    { "ID_COMPETENCIA": 7 },
    { "ID_COMPETENCIA": 8 }
  ]
}

### 13. Create a proposal that matches the second candidate
POST {{baseUrl}}/propostas
Content-Type: application/json

{
  "ID_DEPARTAMENTO": 2,
  "ID_TIPO_PROPOSTA": 4,
  "ID_EMPRESA": 1,
  "NOME_PROPOSTA": "Desenvolvedor de Sistemas Embarcados",
  "DESCRICAO_PROPOSTA": "Procuramos um desenvolvedor para trabalhar em sistemas embarcados.",
  "competencias": [
    { "ID_COMPETENCIA": 6 },
    { "ID_COMPETENCIA": 7 },
    { "ID_COMPETENCIA": 8 }
  ]
}

### 14. Test notification matching logic for fourth proposal
POST {{baseUrl}}/notificacoes-personalizadas/test-matching
Content-Type: application/json

{
  "propostaId": 4
}

### 15. Get notifications for the second candidate
GET {{baseUrl}}/notificacoes-personalizadas/candidato/54322

### 16. Mark all notifications as read for first candidate
PUT {{baseUrl}}/notificacoes-personalizadas/candidato/{{candidatoMecanografico}}/read/all

### 17. Verify all notifications were marked as read
GET {{baseUrl}}/notificacoes-personalizadas/candidato/{{candidatoMecanografico}}

### 18. Debug: Get all candidates with their competencies
GET {{baseUrl}}/candidatos?includeCompetencias=true